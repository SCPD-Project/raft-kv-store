// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raftpb/raft.proto

package raftpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Command struct {
	Method               string             `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Key                  string             `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                int64              `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	Gt                   *GlobalTransaction `protobuf:"bytes,4,opt,name=gt,proto3" json:"gt,omitempty"`
	Cond                 *Cond              `protobuf:"bytes,5,opt,name=cond,proto3" json:"cond,omitempty"`
	So                   *ShardOps          `protobuf:"bytes,6,opt,name=so,proto3" json:"so,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_f652ee94e728864d, []int{0}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Command) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Command) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Command) GetGt() *GlobalTransaction {
	if m != nil {
		return m.Gt
	}
	return nil
}

func (m *Command) GetCond() *Cond {
	if m != nil {
		return m.Cond
	}
	return nil
}

func (m *Command) GetSo() *ShardOps {
	if m != nil {
		return m.So
	}
	return nil
}

type Cond struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                int64    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cond) Reset()         { *m = Cond{} }
func (m *Cond) String() string { return proto.CompactTextString(m) }
func (*Cond) ProtoMessage()    {}
func (*Cond) Descriptor() ([]byte, []int) {
	return fileDescriptor_f652ee94e728864d, []int{1}
}

func (m *Cond) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cond.Unmarshal(m, b)
}
func (m *Cond) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cond.Marshal(b, m, deterministic)
}
func (m *Cond) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cond.Merge(m, src)
}
func (m *Cond) XXX_Size() int {
	return xxx_messageInfo_Cond.Size(m)
}
func (m *Cond) XXX_DiscardUnknown() {
	xxx_messageInfo_Cond.DiscardUnknown(m)
}

var xxx_messageInfo_Cond proto.InternalMessageInfo

func (m *Cond) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Cond) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// GlobalTransaction captures the info of entire transaction
type GlobalTransaction struct {
	Txid string       `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Cmds *RaftCommand `protobuf:"bytes,2,opt,name=cmds,proto3" json:"cmds,omitempty"`
	// Cohorts consists of leader's of all the shards.
	// TODO: It can be used for transaction stats etc in the future.
	Cohorts              []string            `protobuf:"bytes,3,rep,name=cohorts,proto3" json:"cohorts,omitempty"`
	ShardToCommands      map[int64]*ShardOps `protobuf:"bytes,4,rep,name=shard_to_commands,json=shardToCommands,proto3" json:"shard_to_commands,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Phase                string              `protobuf:"bytes,5,opt,name=phase,proto3" json:"phase,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GlobalTransaction) Reset()         { *m = GlobalTransaction{} }
func (m *GlobalTransaction) String() string { return proto.CompactTextString(m) }
func (*GlobalTransaction) ProtoMessage()    {}
func (*GlobalTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_f652ee94e728864d, []int{2}
}

func (m *GlobalTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalTransaction.Unmarshal(m, b)
}
func (m *GlobalTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalTransaction.Marshal(b, m, deterministic)
}
func (m *GlobalTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalTransaction.Merge(m, src)
}
func (m *GlobalTransaction) XXX_Size() int {
	return xxx_messageInfo_GlobalTransaction.Size(m)
}
func (m *GlobalTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalTransaction proto.InternalMessageInfo

func (m *GlobalTransaction) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *GlobalTransaction) GetCmds() *RaftCommand {
	if m != nil {
		return m.Cmds
	}
	return nil
}

func (m *GlobalTransaction) GetCohorts() []string {
	if m != nil {
		return m.Cohorts
	}
	return nil
}

func (m *GlobalTransaction) GetShardToCommands() map[int64]*ShardOps {
	if m != nil {
		return m.ShardToCommands
	}
	return nil
}

func (m *GlobalTransaction) GetPhase() string {
	if m != nil {
		return m.Phase
	}
	return ""
}

type TxidMap struct {
	Map                  map[string]*GlobalTransaction `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *TxidMap) Reset()         { *m = TxidMap{} }
func (m *TxidMap) String() string { return proto.CompactTextString(m) }
func (*TxidMap) ProtoMessage()    {}
func (*TxidMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_f652ee94e728864d, []int{3}
}

func (m *TxidMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxidMap.Unmarshal(m, b)
}
func (m *TxidMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxidMap.Marshal(b, m, deterministic)
}
func (m *TxidMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxidMap.Merge(m, src)
}
func (m *TxidMap) XXX_Size() int {
	return xxx_messageInfo_TxidMap.Size(m)
}
func (m *TxidMap) XXX_DiscardUnknown() {
	xxx_messageInfo_TxidMap.DiscardUnknown(m)
}

var xxx_messageInfo_TxidMap proto.InternalMessageInfo

func (m *TxidMap) GetMap() map[string]*GlobalTransaction {
	if m != nil {
		return m.Map
	}
	return nil
}

type OpsMap struct {
	Map                  map[string]*ShardOps `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OpsMap) Reset()         { *m = OpsMap{} }
func (m *OpsMap) String() string { return proto.CompactTextString(m) }
func (*OpsMap) ProtoMessage()    {}
func (*OpsMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_f652ee94e728864d, []int{4}
}

func (m *OpsMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpsMap.Unmarshal(m, b)
}
func (m *OpsMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpsMap.Marshal(b, m, deterministic)
}
func (m *OpsMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpsMap.Merge(m, src)
}
func (m *OpsMap) XXX_Size() int {
	return xxx_messageInfo_OpsMap.Size(m)
}
func (m *OpsMap) XXX_DiscardUnknown() {
	xxx_messageInfo_OpsMap.DiscardUnknown(m)
}

var xxx_messageInfo_OpsMap proto.InternalMessageInfo

func (m *OpsMap) GetMap() map[string]*ShardOps {
	if m != nil {
		return m.Map
	}
	return nil
}

type ShardOps struct {
	Txid                 string       `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	MasterKey            string       `protobuf:"bytes,2,opt,name=master_key,json=masterKey,proto3" json:"master_key,omitempty"`
	Cmds                 *RaftCommand `protobuf:"bytes,3,opt,name=cmds,proto3" json:"cmds,omitempty"`
	Phase                string       `protobuf:"bytes,4,opt,name=phase,proto3" json:"phase,omitempty"`
	ReadOnly             bool         `protobuf:"varint,5,opt,name=readOnly,proto3" json:"readOnly,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ShardOps) Reset()         { *m = ShardOps{} }
func (m *ShardOps) String() string { return proto.CompactTextString(m) }
func (*ShardOps) ProtoMessage()    {}
func (*ShardOps) Descriptor() ([]byte, []int) {
	return fileDescriptor_f652ee94e728864d, []int{5}
}

func (m *ShardOps) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardOps.Unmarshal(m, b)
}
func (m *ShardOps) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardOps.Marshal(b, m, deterministic)
}
func (m *ShardOps) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardOps.Merge(m, src)
}
func (m *ShardOps) XXX_Size() int {
	return xxx_messageInfo_ShardOps.Size(m)
}
func (m *ShardOps) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardOps.DiscardUnknown(m)
}

var xxx_messageInfo_ShardOps proto.InternalMessageInfo

func (m *ShardOps) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *ShardOps) GetMasterKey() string {
	if m != nil {
		return m.MasterKey
	}
	return ""
}

func (m *ShardOps) GetCmds() *RaftCommand {
	if m != nil {
		return m.Cmds
	}
	return nil
}

func (m *ShardOps) GetPhase() string {
	if m != nil {
		return m.Phase
	}
	return ""
}

func (m *ShardOps) GetReadOnly() bool {
	if m != nil {
		return m.ReadOnly
	}
	return false
}

type RPCResponse struct {
	Status               int32      `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Value                int64      `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Addr                 string     `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
	Phase                string     `protobuf:"bytes,4,opt,name=phase,proto3" json:"phase,omitempty"`
	Commands             []*Command `protobuf:"bytes,5,rep,name=commands,proto3" json:"commands,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RPCResponse) Reset()         { *m = RPCResponse{} }
func (m *RPCResponse) String() string { return proto.CompactTextString(m) }
func (*RPCResponse) ProtoMessage()    {}
func (*RPCResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f652ee94e728864d, []int{6}
}

func (m *RPCResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RPCResponse.Unmarshal(m, b)
}
func (m *RPCResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RPCResponse.Marshal(b, m, deterministic)
}
func (m *RPCResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RPCResponse.Merge(m, src)
}
func (m *RPCResponse) XXX_Size() int {
	return xxx_messageInfo_RPCResponse.Size(m)
}
func (m *RPCResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RPCResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RPCResponse proto.InternalMessageInfo

func (m *RPCResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *RPCResponse) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *RPCResponse) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *RPCResponse) GetPhase() string {
	if m != nil {
		return m.Phase
	}
	return ""
}

func (m *RPCResponse) GetCommands() []*Command {
	if m != nil {
		return m.Commands
	}
	return nil
}

type RaftCommand struct {
	Commands []*Command `protobuf:"bytes,1,rep,name=commands,proto3" json:"commands,omitempty"`
	// To ensure handled by ApplyTransaction
	IsTxn                bool     `protobuf:"varint,2,opt,name=is_txn,json=isTxn,proto3" json:"is_txn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RaftCommand) Reset()         { *m = RaftCommand{} }
func (m *RaftCommand) String() string { return proto.CompactTextString(m) }
func (*RaftCommand) ProtoMessage()    {}
func (*RaftCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_f652ee94e728864d, []int{7}
}

func (m *RaftCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaftCommand.Unmarshal(m, b)
}
func (m *RaftCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaftCommand.Marshal(b, m, deterministic)
}
func (m *RaftCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaftCommand.Merge(m, src)
}
func (m *RaftCommand) XXX_Size() int {
	return xxx_messageInfo_RaftCommand.Size(m)
}
func (m *RaftCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_RaftCommand.DiscardUnknown(m)
}

var xxx_messageInfo_RaftCommand proto.InternalMessageInfo

func (m *RaftCommand) GetCommands() []*Command {
	if m != nil {
		return m.Commands
	}
	return nil
}

func (m *RaftCommand) GetIsTxn() bool {
	if m != nil {
		return m.IsTxn
	}
	return false
}

type JoinMsg struct {
	RaftAddress          string   `protobuf:"bytes,1,opt,name=RaftAddress,proto3" json:"RaftAddress,omitempty"`
	ID                   string   `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	TYPE                 string   `protobuf:"bytes,3,opt,name=TYPE,proto3" json:"TYPE,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinMsg) Reset()         { *m = JoinMsg{} }
func (m *JoinMsg) String() string { return proto.CompactTextString(m) }
func (*JoinMsg) ProtoMessage()    {}
func (*JoinMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_f652ee94e728864d, []int{8}
}

func (m *JoinMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinMsg.Unmarshal(m, b)
}
func (m *JoinMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinMsg.Marshal(b, m, deterministic)
}
func (m *JoinMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinMsg.Merge(m, src)
}
func (m *JoinMsg) XXX_Size() int {
	return xxx_messageInfo_JoinMsg.Size(m)
}
func (m *JoinMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinMsg.DiscardUnknown(m)
}

var xxx_messageInfo_JoinMsg proto.InternalMessageInfo

func (m *JoinMsg) GetRaftAddress() string {
	if m != nil {
		return m.RaftAddress
	}
	return ""
}

func (m *JoinMsg) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *JoinMsg) GetTYPE() string {
	if m != nil {
		return m.TYPE
	}
	return ""
}

func init() {
	proto.RegisterType((*Command)(nil), "raftpb.Command")
	proto.RegisterType((*Cond)(nil), "raftpb.Cond")
	proto.RegisterType((*GlobalTransaction)(nil), "raftpb.GlobalTransaction")
	proto.RegisterMapType((map[int64]*ShardOps)(nil), "raftpb.GlobalTransaction.ShardToCommandsEntry")
	proto.RegisterType((*TxidMap)(nil), "raftpb.TxidMap")
	proto.RegisterMapType((map[string]*GlobalTransaction)(nil), "raftpb.TxidMap.MapEntry")
	proto.RegisterType((*OpsMap)(nil), "raftpb.OpsMap")
	proto.RegisterMapType((map[string]*ShardOps)(nil), "raftpb.OpsMap.MapEntry")
	proto.RegisterType((*ShardOps)(nil), "raftpb.ShardOps")
	proto.RegisterType((*RPCResponse)(nil), "raftpb.RPCResponse")
	proto.RegisterType((*RaftCommand)(nil), "raftpb.RaftCommand")
	proto.RegisterType((*JoinMsg)(nil), "raftpb.JoinMsg")
}

func init() { proto.RegisterFile("raftpb/raft.proto", fileDescriptor_f652ee94e728864d) }

var fileDescriptor_f652ee94e728864d = []byte{
	// 590 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0xd5, 0xda, 0x8e, 0xe3, 0x4c, 0x7e, 0xfa, 0xb5, 0x59, 0x0a, 0x98, 0x48, 0x48, 0x96, 0x0f,
	0x90, 0x82, 0xe4, 0x4a, 0xe1, 0x82, 0xb8, 0x41, 0x5a, 0x41, 0x41, 0x51, 0xda, 0xc5, 0x17, 0x7a,
	0x89, 0x36, 0x59, 0x37, 0xb1, 0x88, 0xbd, 0x96, 0x77, 0x8b, 0x92, 0x03, 0x77, 0xce, 0x9c, 0xf8,
	0x1c, 0x9c, 0xf8, 0x78, 0xc8, 0xbb, 0x76, 0xea, 0x80, 0xdb, 0x8a, 0x53, 0xe6, 0x6f, 0xf6, 0xbd,
	0x37, 0x33, 0x86, 0x5e, 0x4e, 0x2f, 0x65, 0x36, 0x3b, 0x2a, 0x7e, 0x82, 0x2c, 0xe7, 0x92, 0x63,
	0x5b, 0x87, 0xfc, 0x5f, 0x08, 0xda, 0x23, 0x9e, 0x24, 0x34, 0x65, 0xf8, 0x01, 0xd8, 0x49, 0x24,
	0x97, 0x9c, 0xb9, 0xc8, 0x43, 0x83, 0x0e, 0x29, 0x3d, 0xbc, 0x0f, 0xe6, 0xe7, 0x68, 0xe3, 0x1a,
	0x2a, 0x58, 0x98, 0xf8, 0x00, 0x5a, 0x5f, 0xe8, 0xea, 0x2a, 0x72, 0x4d, 0x0f, 0x0d, 0x4c, 0xa2,
	0x1d, 0x7c, 0x08, 0xc6, 0x42, 0xba, 0x96, 0x87, 0x06, 0xdd, 0xe1, 0xa3, 0x40, 0x3f, 0x10, 0xbc,
	0x5d, 0xf1, 0x19, 0x5d, 0x85, 0x39, 0x4d, 0x05, 0x9d, 0xcb, 0x98, 0xa7, 0xc4, 0x58, 0x48, 0xec,
	0x81, 0x35, 0xe7, 0x29, 0x73, 0x5b, 0xaa, 0xf8, 0xbf, 0xaa, 0x78, 0xc4, 0x53, 0x46, 0x54, 0x06,
	0x7b, 0x60, 0x08, 0xee, 0xda, 0x2a, 0xbf, 0x5f, 0xe5, 0x3f, 0x2e, 0x69, 0xce, 0x26, 0x99, 0x20,
	0x86, 0xe0, 0x7e, 0x00, 0x56, 0x51, 0x5f, 0xc1, 0x43, 0x0d, 0xf0, 0x8c, 0x1a, 0x3c, 0xff, 0xa7,
	0x01, 0xbd, 0xbf, 0xd0, 0x60, 0x0c, 0x96, 0x5c, 0xc7, 0x15, 0x65, 0x65, 0xe3, 0xa7, 0x60, 0xcd,
	0x13, 0x26, 0x54, 0x7b, 0x77, 0x78, 0xaf, 0x7a, 0x9d, 0xd0, 0x4b, 0x59, 0x6a, 0x45, 0x54, 0x01,
	0x76, 0xa1, 0x3d, 0xe7, 0x4b, 0x9e, 0x4b, 0xe1, 0x9a, 0x9e, 0x39, 0xe8, 0x90, 0xca, 0xc5, 0x17,
	0xd0, 0x13, 0x05, 0xd8, 0xa9, 0xe4, 0xd3, 0xb9, 0xee, 0x11, 0xae, 0xe5, 0x99, 0x83, 0xee, 0x30,
	0xb8, 0x51, 0x1a, 0xcd, 0x2f, 0xe4, 0xe5, 0x23, 0xe2, 0x24, 0x95, 0xf9, 0x86, 0xec, 0x89, 0xdd,
	0x68, 0x41, 0x2f, 0x5b, 0x52, 0x11, 0x29, 0xf5, 0x3a, 0x44, 0x3b, 0xfd, 0x10, 0x0e, 0x9a, 0xda,
	0xeb, 0xf2, 0x98, 0x5a, 0x9e, 0x27, 0x75, 0x79, 0x9a, 0xd4, 0xd5, 0xe9, 0x57, 0xc6, 0x4b, 0xe4,
	0x7f, 0x43, 0xd0, 0x0e, 0xd7, 0x31, 0x1b, 0xd3, 0x0c, 0x3f, 0x03, 0x33, 0xa1, 0x99, 0x8b, 0x14,
	0x0b, 0xb7, 0xea, 0x2a, 0xb3, 0xc1, 0x98, 0x66, 0x1a, 0x6f, 0x51, 0xd4, 0x3f, 0x07, 0xa7, 0x0a,
	0x34, 0x0c, 0xe8, 0x68, 0x17, 0xc1, 0x2d, 0xcb, 0x52, 0x83, 0xf2, 0x15, 0xec, 0x49, 0x26, 0x0a,
	0x20, 0x87, 0x75, 0x20, 0x0f, 0xab, 0x66, 0x9d, 0xfc, 0x03, 0xc7, 0xbb, 0x5b, 0x71, 0xfc, 0x8b,
	0x12, 0x3f, 0x10, 0x38, 0x55, 0xbc, 0x71, 0x6b, 0x1e, 0x03, 0x24, 0x54, 0xc8, 0x28, 0x9f, 0x5e,
	0x5f, 0x4b, 0x47, 0x47, 0x3e, 0x44, 0x9b, 0xed, 0x52, 0x99, 0x77, 0x2d, 0xd5, 0x76, 0xbc, 0x56,
	0x6d, 0xbc, 0xb8, 0x0f, 0x4e, 0x1e, 0x51, 0x36, 0x49, 0x57, 0x1b, 0x35, 0x77, 0x87, 0x6c, 0x7d,
	0xff, 0x3b, 0x82, 0x2e, 0x39, 0x1b, 0x91, 0x48, 0x64, 0x3c, 0x15, 0x51, 0x71, 0xc8, 0x42, 0x52,
	0x79, 0x25, 0x14, 0xbe, 0x16, 0x29, 0xbd, 0xe6, 0xbb, 0x28, 0xb8, 0x50, 0xc6, 0x72, 0x05, 0xac,
	0x43, 0x94, 0x7d, 0x03, 0x86, 0xe7, 0xe0, 0x6c, 0x77, 0xb9, 0xa5, 0xc4, 0xdf, 0xbb, 0xbe, 0x5c,
	0x4d, 0x61, 0x5b, 0xe0, 0x9f, 0x43, 0xb7, 0xc6, 0x6d, 0xa7, 0x17, 0xdd, 0xd1, 0x8b, 0xef, 0x83,
	0x1d, 0x8b, 0xa9, 0x5c, 0xa7, 0x0a, 0xa9, 0x43, 0x5a, 0xb1, 0x08, 0xd7, 0xa9, 0x3f, 0x81, 0xf6,
	0x7b, 0x1e, 0xa7, 0x63, 0xb1, 0xc0, 0x9e, 0xfe, 0xf7, 0xd7, 0x8c, 0xe5, 0x91, 0x10, 0xe5, 0x1c,
	0xea, 0x21, 0xfc, 0x3f, 0x18, 0xa7, 0xc7, 0xe5, 0x18, 0x8c, 0xd3, 0xe3, 0x82, 0x66, 0xf8, 0xe9,
	0xec, 0xa4, 0xa2, 0x59, 0xd8, 0x6f, 0x9c, 0x8b, 0xf2, 0x3b, 0x38, 0xb3, 0xd5, 0x67, 0xf1, 0xc5,
	0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb8, 0xe8, 0x60, 0x24, 0x2b, 0x05, 0x00, 0x00,
}
