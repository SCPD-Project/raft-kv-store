// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raftpb/raft.proto

package raftpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Command struct {
	Method               string   `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_f652ee94e728864d, []int{0}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Command) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Command) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type RaftCommand struct {
	Commands             []*Command `protobuf:"bytes,1,rep,name=commands,proto3" json:"commands,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RaftCommand) Reset()         { *m = RaftCommand{} }
func (m *RaftCommand) String() string { return proto.CompactTextString(m) }
func (*RaftCommand) ProtoMessage()    {}
func (*RaftCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_f652ee94e728864d, []int{1}
}

func (m *RaftCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaftCommand.Unmarshal(m, b)
}
func (m *RaftCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaftCommand.Marshal(b, m, deterministic)
}
func (m *RaftCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaftCommand.Merge(m, src)
}
func (m *RaftCommand) XXX_Size() int {
	return xxx_messageInfo_RaftCommand.Size(m)
}
func (m *RaftCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_RaftCommand.DiscardUnknown(m)
}

var xxx_messageInfo_RaftCommand proto.InternalMessageInfo

func (m *RaftCommand) GetCommands() []*Command {
	if m != nil {
		return m.Commands
	}
	return nil
}

type JoinMsg struct {
	RaftAddress          string   `protobuf:"bytes,1,opt,name=RaftAddress,proto3" json:"RaftAddress,omitempty"`
	ID                   string   `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinMsg) Reset()         { *m = JoinMsg{} }
func (m *JoinMsg) String() string { return proto.CompactTextString(m) }
func (*JoinMsg) ProtoMessage()    {}
func (*JoinMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_f652ee94e728864d, []int{2}
}

func (m *JoinMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinMsg.Unmarshal(m, b)
}
func (m *JoinMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinMsg.Marshal(b, m, deterministic)
}
func (m *JoinMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinMsg.Merge(m, src)
}
func (m *JoinMsg) XXX_Size() int {
	return xxx_messageInfo_JoinMsg.Size(m)
}
func (m *JoinMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinMsg.DiscardUnknown(m)
}

var xxx_messageInfo_JoinMsg proto.InternalMessageInfo

func (m *JoinMsg) GetRaftAddress() string {
	if m != nil {
		return m.RaftAddress
	}
	return ""
}

func (m *JoinMsg) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func init() {
	proto.RegisterType((*Command)(nil), "raftpb.Command")
	proto.RegisterType((*RaftCommand)(nil), "raftpb.RaftCommand")
	proto.RegisterType((*JoinMsg)(nil), "raftpb.JoinMsg")
}

func init() { proto.RegisterFile("raftpb/raft.proto", fileDescriptor_f652ee94e728864d) }

var fileDescriptor_f652ee94e728864d = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x4a, 0x4c, 0x2b,
	0x29, 0x48, 0xd2, 0x07, 0x51, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x6c, 0x10, 0x21, 0x25,
	0x4f, 0x2e, 0x76, 0xe7, 0xfc, 0xdc, 0xdc, 0xc4, 0xbc, 0x14, 0x21, 0x31, 0x2e, 0xb6, 0xdc, 0xd4,
	0x92, 0x8c, 0xfc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x28, 0x4f, 0x48, 0x80, 0x8b,
	0x39, 0x3b, 0xb5, 0x52, 0x82, 0x09, 0x2c, 0x08, 0x62, 0x0a, 0x89, 0x70, 0xb1, 0x96, 0x25, 0xe6,
	0x94, 0xa6, 0x4a, 0x30, 0x83, 0xc5, 0x20, 0x1c, 0x25, 0x2b, 0x2e, 0xee, 0xa0, 0xc4, 0xb4, 0x12,
	0x98, 0x71, 0xda, 0x5c, 0x1c, 0xc9, 0x10, 0x66, 0xb1, 0x04, 0xa3, 0x02, 0xb3, 0x06, 0xb7, 0x11,
	0xbf, 0x1e, 0xc4, 0x52, 0x3d, 0xa8, 0x92, 0x20, 0xb8, 0x02, 0x25, 0x6b, 0x2e, 0x76, 0xaf, 0xfc,
	0xcc, 0x3c, 0xdf, 0xe2, 0x74, 0x21, 0x05, 0x88, 0x31, 0x8e, 0x29, 0x29, 0x45, 0xa9, 0xc5, 0xc5,
	0x50, 0xb7, 0x20, 0x0b, 0x09, 0xf1, 0x71, 0x31, 0x79, 0xba, 0x40, 0xdd, 0xc3, 0xe4, 0xe9, 0xe2,
	0xc4, 0x11, 0x05, 0xf5, 0x4d, 0x12, 0x1b, 0xd8, 0x73, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x7c, 0xb2, 0x38, 0xe1, 0xf1, 0x00, 0x00, 0x00,
}
